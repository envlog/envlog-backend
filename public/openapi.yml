openapi: 3.0.0
info:
  title: 'Envlog Project CRUD'
  description: 'Envlog Project Application API'
  version: 1.0.0

servers:
  - url: 'http://localhost:3001/'
    description: 'Local development'
  #- url: 'https://ymlwbdaex2.execute-api.eu-central-1.amazonaws.com/dev/' indirizzo di stage dopo deploy ? boooo
  #  description: 'Stage'

paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: 'Register'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterPayload'
      responses:
        '201':
          description: 'Account created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
        '400':
          description: 'Bad request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '500':
          description: 'Internal server error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /auth/login:
    post:
      tags:
        - Auth
      summary: 'Login'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginPayload'
      responses:
        '200':
          description: 'Login succesful'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: 'Bad request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '500':
          description: 'Internal server error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /auth/logout:
    post:
      tags:
        - Auth
      summary: 'Logout'
      responses:
        '200':
          description: 'Logout succesful'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          description: 'Bad request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '500':
          description: 'Internal server error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /sensors/groups:
    get:
      tags:
        - Sensors
      summary: 'Get sensors by groups'
      responses:
        '200':
          description: 'Get sensors list order by group'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SensorsPayload'
        '400':
          description: 'Bad request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '500':
          description: 'Internal server error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /sensors:
    get:
      tags:
      - Sensors
      summary: 'Get all sensors that match the specified query parameters'
      parameters:
        - in: query
          name: Enabled
          schema:
            type: boolean
          description: 'Sensor status, default: true'
        - in: query
          name: Type
          schema:
            type: string
          description: 'Sensor type, default: undefined'
        - in: query
          name: Name
          schema:
            type: string
          description: 'Sensor name, default: undefined'
        - in: query
          name: MCU_ID
          schema:
            type: string
          description: 'Sensor ID, default: undefined'
        - in: query
          name: Limit
          schema:
            type: integer
      description: 'Numbers of results to get, default: 30'
      responses:
        '200':
          description: 'All sensors matching the specified query parameters'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SensorsPayloadArray'
        '400':
          description: 'Bad request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '500':
          description: 'Internal server error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        







components:
  schemas:
    Message:
      type: object
      properties:
        message:
          type: string
      required:
        - message
    Errors:
      type: object
      properties:
        errors:
          type: array
          items:
            type: string
    RegisterPayload:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
        passwordConfirmation:
          type: string 
      required:
        - username
        - email
        - password
        - passwordConfirmation
    RegisterResponse:
      description: 'Register response'
      type: object
      properties:
        username:
          type: string
        email:
          type: string
    LoginPayload:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
        - email
        - password
    LoginResponse:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        isAdmin:
          type: boolean
    SensorsPayload:
      type: object
      properties:
        _id:
          type: string
        MCU_ID:
          type: string
        NAME:
          type: string
        Type:
          type: string
        Enabled:
          type: boolean
        Group:
          type: string
    SensorsPayloadArray:
      type: array
      items:
        $ref: '#/components/schemas/SensorsPayload'

